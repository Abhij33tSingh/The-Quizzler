[{"/home/shivam/new/The-Quizzler/ClientSide/src/index.js":"1","/home/shivam/new/The-Quizzler/ClientSide/src/App.jsx":"2","/home/shivam/new/The-Quizzler/ClientSide/src/components/CreateQuizPage.jsx":"3","/home/shivam/new/The-Quizzler/ClientSide/src/components/HomePage.jsx":"4","/home/shivam/new/The-Quizzler/ClientSide/src/components/RegisterPage.jsx":"5","/home/shivam/new/The-Quizzler/ClientSide/src/components/LoginPage.jsx":"6","/home/shivam/new/The-Quizzler/ClientSide/src/components/QuizCreated.jsx":"7","/home/shivam/new/The-Quizzler/ClientSide/src/components/Profile.jsx":"8","/home/shivam/new/The-Quizzler/ClientSide/src/components/AddQuestion.jsx":"9","/home/shivam/new/The-Quizzler/ClientSide/src/hooks/usebasic-input.jsx":"10","/home/shivam/new/The-Quizzler/ClientSide/src/components/QuestionCard.jsx":"11","/home/shivam/new/The-Quizzler/ClientSide/src/components/SelectQuiz.jsx":"12","/home/shivam/new/The-Quizzler/ClientSide/src/components/AttemptQuiz.jsx":"13","/home/shivam/new/The-Quizzler/ClientSide/src/components/QuestionBox.jsx":"14"},{"size":237,"mtime":1637235062435,"results":"15","hashOfConfig":"16"},{"size":1603,"mtime":1637244696293,"results":"17","hashOfConfig":"16"},{"size":3660,"mtime":1637235754399,"results":"18","hashOfConfig":"16"},{"size":1687,"mtime":1637244013947,"results":"19","hashOfConfig":"16"},{"size":3651,"mtime":1637235062435,"results":"20","hashOfConfig":"16"},{"size":3136,"mtime":1637235062435,"results":"21","hashOfConfig":"16"},{"size":465,"mtime":1637235062435,"results":"22","hashOfConfig":"16"},{"size":1665,"mtime":1637235062435,"results":"23","hashOfConfig":"16"},{"size":5909,"mtime":1637235767195,"results":"24","hashOfConfig":"16"},{"size":588,"mtime":1637235062435,"results":"25","hashOfConfig":"16"},{"size":124,"mtime":1637235062435,"results":"26","hashOfConfig":"16"},{"size":926,"mtime":1637246612795,"results":"27","hashOfConfig":"16"},{"size":2075,"mtime":1637251107727,"results":"28","hashOfConfig":"16"},{"size":699,"mtime":1637249897640,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1j6xx29",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shivam/new/The-Quizzler/ClientSide/src/index.js",[],["63","64"],"/home/shivam/new/The-Quizzler/ClientSide/src/App.jsx",[],"/home/shivam/new/The-Quizzler/ClientSide/src/components/CreateQuizPage.jsx",["65","66","67"],"import AddQuestion from \"./AddQuestion\";\nimport { useState } from \"react\";\nimport useBasicInput from \"../hooks/usebasic-input\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CreateQuizPage = () => {\n  const navigate = useNavigate();\n\n  const [allQutions, addques] = useState([]);\n  const n = 2;\n  var x = 0;\n  var t = \"public\";\n  const Quiztype = (e) => {\n    t = e.target.value;\n  };\n  const data = (Q) => {\n    const item = Q;\n    addques([...allQutions, item]);\n    x++;\n    console.log(x);\n    //console.log(allQutions);\n  };\n  const {\n    value: title,\n    valueChangeHandler: titleChangeHandler,\n    valueIsValid: titleIsValid,\n    onBlurHandler: titleBlurHandler,\n    inputTouched: titleInputTouched,\n    reset: titleReset,\n  } = useBasicInput((value) => value.trim().length !== 0);\n\n  const {\n    value: Description,\n    valueChangeHandler: DescriptionChangeHandler,\n    valueIsValid: DescriptionIsValid,\n    onBlurHandler: DescriptionBlurHandler,\n    inputTouched: DescriptionInputTouched,\n    reset: DescriptionReset,\n  } = useBasicInput((value) => value.trim().length !== 0);\n\n  const submissionHandler = (e) => {\n    e.preventDefault();\n    if (!formIsValid) {\n      return;\n    }\n    Axios.post(\"http://localhost:3001/postQuiz\", {\n      title: title,\n      description: Description,\n      t: t,\n      allQuestions: allQutions,\n    });\n\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\n      response.data.map((data) => {\n        if (data.description === Description && data.title === data.title) {\n          navigate(\"/quizCreated/\" + data._id);\n          return;\n        }\n      });\n    });\n\n    DescriptionReset();\n    titleReset();\n    //console.log(des.quizDescription, des.quizTitle);\n  };\n\n  const DescriptionInputClasses =\n    !DescriptionIsValid && DescriptionInputTouched ? \"invalid\" : \"\";\n  const titleInputClasses = !titleIsValid && titleInputTouched ? \"invalid\" : \"\";\n  const formIsValid =\n    DescriptionIsValid && titleIsValid && allQutions.length === n;\n\n  return (\n    <div>\n      <h2>Create Quiz</h2>\n      <form onSubmit={submissionHandler}>\n        <div className={`form-control ${titleInputClasses}`}>\n          <label>Quiz Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            onBlur={titleBlurHandler}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className={`form-control ${DescriptionInputClasses}`}>\n          <label>Quiz Description</label>\n          <input\n            type=\"text-area\"\n            value={Description}\n            onBlur={DescriptionBlurHandler}\n            onChange={DescriptionChangeHandler}\n          />\n        </div>\n        <div className={`form-control`} onClick={Quiztype}>\n          <label>private</label>\n          <input type=\"radio\" name=\"quiz-type\" value=\"private\" />\n          <label>public</label>\n          <input type=\"radio\" name=\"quiz-type\" value=\"public\" checked />\n        </div>\n        <div className={`form-control`}>\n          <section>\n            {Array.from({ length: n }, (_, i) => (\n              <div>\n                <strong>Question {i + 1}</strong>\n                <br></br>\n                <br></br>\n                <AddQuestion data={data} />\n                <br></br>\n                <hr></hr>\n              </div>\n            ))}\n          </section>\n        </div>\n        <div>\n          <button className=\"form-actions\" type=\"submit\" value=\"Create Quiz\">\n            {\" \"}\n            Create Quiz !\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateQuizPage;\n","/home/shivam/new/The-Quizzler/ClientSide/src/components/HomePage.jsx",["68","69","70","71"],"import React from \"react\";\nimport { useEffect, useState, Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SelectQuiz from \"./SelectQuiz\";\n\nfunction HomePage(props) {\n  const isLoggedIn = props.loggedIn;\n  //const id = props.id;\n  const [name, setName] = useState(\"\");\n  const [id,setId] = useState(\"\");\n  const [allQuizzes, setAllQuizzes] = useState({});\n\n  const params = useParams();\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\n      setName(response.data.name);}\n      //WE ARE GETTING ALL OF OUR USER DATA IN response.data\n    );\n\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\n      setAllQuizzes(response.data);\n\n      //WE ARE GETTING ALL OF OUR QUIZZES IN response\n    });\n  }, []);\n  const q = Object.values(allQuizzes)\n  if (true) {\n    return (\n      <div>\n        <header>\n          <h1>Quizzler</h1>\n          <ul className=\"navbarItems\">\n            <li>Create a Quiz</li>\n            <li>About us</li>\n            <li>Take a Quiz</li>\n            <li>\n              <Link to=\"/userProfile/\" />\n              {name}\n            </li>\n          </ul>\n\n          <div className=\"Signup\">\n            <button>Sign Up</button>\n            \n          </div>\n        </header>\n        <div>{console.log(q)}</div>\n        <div>\n        {\n           q.map((q,key)=>{\n             return(<div>\n               <SelectQuiz q={q} isLoggedIn={isLoggedIn} id={params.id}/>\n             </div>)\n           })\n         }\n        </div>\n      </div>\n    );\n  }\n  // navigate(\"/login\");   NAVIGATE IS NOT WORKING!??\n}\n\nexport default HomePage;\n","/home/shivam/new/The-Quizzler/ClientSide/src/components/RegisterPage.jsx",[],"/home/shivam/new/The-Quizzler/ClientSide/src/components/LoginPage.jsx",[],"/home/shivam/new/The-Quizzler/ClientSide/src/components/QuizCreated.jsx",["72"],"import { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nconst QuizCreated = () => {\n  const params = useParams();\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getQuiz/\" + params.id).then((response) => {\n      console.log(response);\n    });\n  }, []);\n\n  return (\n    <div>\n      This page shows the quiz user just created!(Look at the browser console)\n    </div>\n  );\n};\n\nexport default QuizCreated;\n","/home/shivam/new/The-Quizzler/ClientSide/src/components/Profile.jsx",["73"],"import React from \"react\";\nimport userIcons from \"../Images/gamer.png\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Profile() {\n  const params = useParams();\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\n      console.log(response);\n    });\n  }, []);\n\n  return (\n    <div className=\"profilePage\">\n      <header>\n        <h1>Quizzler</h1>\n\n        <ul className=\"navbarItems\">\n          <li>Create a Quiz</li>\n          <li>About us</li>\n          <li>Start Quiz</li>\n          <li>User's Name</li>\n        </ul>\n      </header>\n      <div className=\"IntroSection\">\n        <img className=\"UserImage\" src={userIcons} alt=\"user icon\" />\n        <div>\n          <h1 className=\"Greetings\">Hello User's Name</h1>\n          <div className=\"UserDetails\">\n            <p>\n              Quiz Attempted: <span className=\"NumOfQuizAttempted\">0</span>\n            </p>\n            <p>\n              Quiz Created: <span className=\"NumOfQuizCreated\">0</span>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"ResultsContainer\">\n        <div className=\"HostResult\">\n          <h1>Results of your Quizzes</h1>\n          <p>To check the results of the quizzes you created </p>\n          <button type=\"button\">Click Here</button>\n        </div>\n        <div className=\"QuizAttemptedResult\">\n          <h1>Your Past Results</h1>\n          <p>To check the results of the quizzes you attempted </p>\n          <button type=\"button\">Click Here</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","/home/shivam/new/The-Quizzler/ClientSide/src/components/AddQuestion.jsx",[],"/home/shivam/new/The-Quizzler/ClientSide/src/hooks/usebasic-input.jsx",[],"/home/shivam/new/The-Quizzler/ClientSide/src/components/QuestionCard.jsx",[],"/home/shivam/new/The-Quizzler/ClientSide/src/components/SelectQuiz.jsx",[],"/home/shivam/new/The-Quizzler/ClientSide/src/components/AttemptQuiz.jsx",["74","75","76","77","78","79","80"],"/home/shivam/new/The-Quizzler/ClientSide/src/components/QuestionBox.jsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":56,"column":32,"nodeType":"87","messageId":"88","endLine":56,"endColumn":34},{"ruleId":"89","severity":1,"message":"90","line":57,"column":49,"nodeType":"91","messageId":"92","endLine":57,"endColumn":74},{"ruleId":"85","severity":1,"message":"93","line":59,"column":11,"nodeType":"94","messageId":"95","endLine":59,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":2,"column":31,"nodeType":"98","messageId":"99","endLine":2,"endColumn":39},{"ruleId":"96","severity":1,"message":"100","line":11,"column":10,"nodeType":"98","messageId":"99","endLine":11,"endColumn":12},{"ruleId":"96","severity":1,"message":"101","line":11,"column":13,"nodeType":"98","messageId":"99","endLine":11,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":27,"column":6,"nodeType":"104","endLine":27,"endColumn":8,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"103","line":12,"column":6,"nodeType":"104","endLine":12,"endColumn":8,"suggestions":"106"},{"ruleId":"102","severity":1,"message":"103","line":14,"column":6,"nodeType":"104","endLine":14,"endColumn":8,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":31,"nodeType":"98","messageId":"99","endLine":2,"endColumn":39},{"ruleId":"96","severity":1,"message":"108","line":4,"column":21,"nodeType":"98","messageId":"99","endLine":4,"endColumn":25},{"ruleId":"96","severity":1,"message":"109","line":8,"column":9,"nodeType":"98","messageId":"99","endLine":8,"endColumn":19},{"ruleId":"96","severity":1,"message":"110","line":11,"column":10,"nodeType":"98","messageId":"99","endLine":11,"endColumn":14},{"ruleId":"96","severity":1,"message":"111","line":15,"column":7,"nodeType":"98","messageId":"99","endLine":15,"endColumn":8},{"ruleId":"102","severity":1,"message":"112","line":43,"column":6,"nodeType":"104","endLine":43,"endColumn":8,"suggestions":"113"},{"ruleId":"96","severity":1,"message":"114","line":44,"column":9,"nodeType":"98","messageId":"99","endLine":44,"endColumn":10},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["117"],["118"],["119"],"'Link' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'name' is assigned a value but never used.","'s' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'params.id2'. Either include them or remove the dependency array.",["120"],"'q' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},{"desc":"121","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [params.id]",{"range":"127","text":"128"},{"range":"129","text":"128"},{"range":"130","text":"128"},"Update the dependencies array to be: [params.id, params.id2]",{"range":"131","text":"132"},[833,835],"[params.id]",[311,313],[376,378],[1348,1350],"[params.id, params.id2]"]