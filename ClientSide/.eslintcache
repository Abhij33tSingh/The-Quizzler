[{"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\index.js":"1","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\App.jsx":"2","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx":"3","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx":"4","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx":"5","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\AttemptQuiz.jsx":"6","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx":"7","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx":"8","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx":"9","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx":"10","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\QuestionBox.jsx":"11","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\SelectQuiz.jsx":"12","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx":"13","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\QuestionCard.jsx":"14"},{"size":249,"mtime":1637328328512,"results":"15","hashOfConfig":"16"},{"size":1660,"mtime":1637328328492,"results":"17","hashOfConfig":"16"},{"size":3515,"mtime":1637328328510,"results":"18","hashOfConfig":"16"},{"size":3921,"mtime":1637328328512,"results":"19","hashOfConfig":"16"},{"size":5711,"mtime":1637334791432,"results":"20","hashOfConfig":"16"},{"size":2372,"mtime":1637328328509,"results":"21","hashOfConfig":"16"},{"size":486,"mtime":1637328328511,"results":"22","hashOfConfig":"16"},{"size":2618,"mtime":1637382175828,"results":"23","hashOfConfig":"16"},{"size":1932,"mtime":1637328328511,"results":"24","hashOfConfig":"16"},{"size":5834,"mtime":1637334693258,"results":"25","hashOfConfig":"16"},{"size":721,"mtime":1637328328511,"results":"26","hashOfConfig":"16"},{"size":679,"mtime":1637381984958,"results":"27","hashOfConfig":"16"},{"size":620,"mtime":1637328328512,"results":"28","hashOfConfig":"16"},{"size":131,"mtime":1637328328511,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1j6xshb",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\index.js",[],["63","64"],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\App.jsx",[],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx",[],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx",[],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx",["65","66","67","68"],"import AddQuestion from \"./AddQuestion\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useBasicInput from \"../hooks/usebasic-input\";\r\nimport React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nconst CreateQuizPage = () => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const [userData, setUserData] = useState({});\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setUserData(response.data);\r\n    });\r\n  }, []);\r\n  const [allQutions, addques] = useState([]);\r\n  const n = 2;\r\n  var x = 0;\r\n  var t = \"public\";\r\n  const Quiztype = (e) => {\r\n    t = e.target.value;\r\n  };\r\n  const data = (Q) => {\r\n    const item = Q;\r\n    addques([...allQutions, item]);\r\n    x++;\r\n    console.log(x);\r\n    //console.log(allQutions);\r\n  };\r\n  const {\r\n    value: title,\r\n    valueChangeHandler: titleChangeHandler,\r\n    valueIsValid: titleIsValid,\r\n    onBlurHandler: titleBlurHandler,\r\n    inputTouched: titleInputTouched,\r\n    reset: titleReset,\r\n  } = useBasicInput((value) => value.trim().length !== 0);\r\n\r\n  const {\r\n    value: Description,\r\n    valueChangeHandler: DescriptionChangeHandler,\r\n    valueIsValid: DescriptionIsValid,\r\n    onBlurHandler: DescriptionBlurHandler,\r\n    inputTouched: DescriptionInputTouched,\r\n    reset: DescriptionReset,\r\n  } = useBasicInput((value) => value.trim().length !== 0);\r\n\r\n  const submissionHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    Axios.post(\"http://localhost:3001/postQuiz\", {\r\n      title: title,\r\n      description: Description,\r\n      t: t,\r\n      allQuestions: allQutions,\r\n    });\r\n\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      response.data.map((data) => {\r\n        if (data.description === Description && data.title === data.title) {\r\n          navigate(\"/quizCreated/\" + data._id);\r\n          return;\r\n        }\r\n      });\r\n    });\r\n\r\n    DescriptionReset();\r\n    titleReset();\r\n    //console.log(des.quizDescription, des.quizTitle);\r\n  };\r\n\r\n  const DescriptionInputClasses =\r\n    !DescriptionIsValid && DescriptionInputTouched ? \"invalid\" : \"\";\r\n  const titleInputClasses = !titleIsValid && titleInputTouched ? \"invalid\" : \"\";\r\n  const formIsValid =\r\n    DescriptionIsValid && titleIsValid && allQutions.length === n;\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 onMouseDown={() => navigate(\"/homepage/\")}>Quizzler</h1>\r\n        <ul className=\"navbarItems\">\r\n          <li\r\n            onClick={() => {\r\n              return (\r\n                <div>\r\n                  {\r\n                    navigate(\"/homepage/\" + params.id)\r\n                    //console.log(props.q.allQuestions)\r\n                  }\r\n                </div>\r\n              );\r\n            }}\r\n          >\r\n            Give Quiz\r\n          </li>\r\n          <li>About us</li>\r\n          <li>{userData.name}</li>\r\n        </ul>\r\n      </header>\r\n      <div className=\"CreateQuizPage\">\r\n        <form onSubmit={submissionHandler}>\r\n          <div className=\"QuizInfoContainer\">\r\n            <div className={`form-control ${titleInputClasses}`}>\r\n              <label className=\"quizTitle\">Quiz Title</label>\r\n              <br />\r\n              <input\r\n                type=\"textarea\"\r\n                value={title}\r\n                onBlur={titleBlurHandler}\r\n                onChange={titleChangeHandler}\r\n                className=\"quizTitleInput\"\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className={`form-control ${DescriptionInputClasses}`}>\r\n              <label className=\"quizDescription\">Quiz Description</label>\r\n              <br />\r\n              <textarea\r\n                value={Description}\r\n                onBlur={DescriptionBlurHandler}\r\n                onChange={DescriptionChangeHandler}\r\n                className=\"quizDescriptionInput\"\r\n                rows=\"30\"\r\n                cols=\"70\"\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className={`form-control`} onClick={Quiztype}>\r\n              <div className=\"Quiztype\">\r\n                <div className=\"PrivateRadio\">\r\n                  <label>Private</label>\r\n                  <input\r\n                    className=\"RadioInput\"\r\n                    type=\"radio\"\r\n                    name=\"quiz-type\"\r\n                    value=\"private\"\r\n                  />\r\n                </div>\r\n                <div className=\"PublicRadio\">\r\n                  <label>Public</label>\r\n                  <input\r\n                    className=\"RadioInput\"\r\n                    type=\"radio\"\r\n                    name=\"quiz-type\"\r\n                    value=\"public\"\r\n                    checked\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`form-control`}>\r\n            <section>\r\n              {Array.from({ length: n }, (_, i) => (\r\n                <div className=\"QuestionCard\">\r\n                  <strong>Question {i + 1}</strong>\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <AddQuestion data={data} />\r\n                </div>\r\n              ))}\r\n            </section>\r\n          </div>\r\n          <div>\r\n            <button className=\"form-actions\" type=\"submit\" value=\"Create Quiz\">\r\n              {\" \"}\r\n              Create Quiz !\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <footer>\r\n        <p> Copyright© {year} </p>{\" \"}\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuizPage;\r\n","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\AttemptQuiz.jsx",["69","70","71","72","73","74","75"],"import React from \"react\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useNavigate,useParams, Link } from \"react-router-dom\";\r\nimport QuestionBox from \"./QuestionBox\";\r\n\r\nfunction AttemptQuiz(props) {\r\n  const isLoggedIn = props.loggedIn;\r\n  const navigate = useNavigate();\r\n  const [score,setScore] = useState(0);\r\n  const [response,setResponse] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [allQues,setQues] = useState([]);\r\n  const [a,setA] = useState([]);\r\n  const params = useParams();\r\n  var s = 0;\r\n  const computedAnswer = (answer,correct) =>{\r\n      console.log(answer,correct);\r\n    if(answer === correct)\r\n    {\r\n        s++;\r\n        setScore(score + 1);\r\n    }\r\n    setResponse(response + 1)\r\n  }\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setName(response.data.name);\r\n      //WE ARE GETTING ALL OF OUR USER DATA IN response.data\r\n    });\r\n\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n        for(let i = 0; i < response.data.length; i++){\r\n            if(response.data[i]._id === params.id2){\r\n                setQues(response.data[i]);\r\n                setA(response.data[i].allQuestions)\r\n                break;\r\n            }\r\n        }\r\n        //setQues(response.data);\r\n  \r\n        //WE ARE GETTING ALL OF OUR QUIZZES IN response\r\n      });\r\n  }, []);\r\n  const q = Object.values(allQues)\r\n  if (true) {\r\n    return (\r\n      <div>\r\n        <header>\r\n        <h1 onMouseDown={()=> navigate(\"/homepage/\")}>\r\n      Quizzler\r\n    </h1>\r\n        </header>\r\n\r\n      \r\n      <div className = \"Container\">\r\n        <h1>{allQues.title}</h1>\r\n        <h4><div>{\r\n            response < a.length &&\r\n        a.map((q)=><div>\r\n            <QuestionBox \r\n                question={q.Question} \r\n                option1={q.option1} \r\n                option2={q.option2} \r\n                option3={q.option3} \r\n                option4={q.option4}\r\n                selected={answer => computedAnswer(answer,q.Answer)}/>\r\n            </div>)}\r\n            {response === a.length ? (<h2>{ console.log(score)}{score}</h2>) : null }\r\n            </div>\r\n            </h4>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n  // navigate(\"/login\");   NAVIGATE IS NOT WORKING!??\r\n}\r\n\r\nexport default AttemptQuiz;\r\n","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx",["76"],"import { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst QuizCreated = () => {\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getQuiz/\" + params.id).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      This page shows the quiz user just created!(Look at the browser console)\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCreated;\r\n","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx",["77","78","79","80"],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx",["81"],"import React from \"react\";\r\nimport userIcons from \"../Images/gamer.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nfunction Profile() {\r\n  const params = useParams();\r\n  const [userData, setUserData] = useState({});\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setUserData(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profilePage\">\r\n      <header>\r\n        \r\n        <h1>Quizzler</h1>\r\n\r\n        <ul className=\"navbarItems\">\r\n          <li>Create a Quiz</li>\r\n          <li>About us</li>\r\n          <li>Start Quiz</li>\r\n          <li>{userData.name}</li>\r\n        </ul>\r\n      </header>\r\n      <div className=\"IntroSection\">\r\n        <img className=\"UserImage\" src={userIcons} alt=\"user icon\" />\r\n        <div>\r\n          <h1 className=\"Greetings\">Hello {userData.name}</h1>\r\n          <div className=\"UserDetails\">\r\n            <p>\r\n              Quiz Attempted: <span className=\"NumOfQuizAttempted\">0</span>\r\n            </p>\r\n            <p>\r\n              Quiz Created: <span className=\"NumOfQuizCreated\">0</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"ResultsContainer\">\r\n        <div className=\"HostResult\">\r\n          <h1>Results of your Quizzes</h1>\r\n          <p>To check the results of the quizzes you created </p>\r\n          <button type=\"button\">Click Here</button>\r\n        </div>\r\n        <div className=\"QuizAttemptedResult\">\r\n          <h1>Your Past Results</h1>\r\n          <p>To check the results of the quizzes you attempted </p>\r\n          <button type=\"button\">Click Here</button>\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        <p> Copyright© {year} </p>{\" \"}\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx",[],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\QuestionBox.jsx",[],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\SelectQuiz.jsx",[],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx",[],"D:\\AI Lab\\The-Quizzler\\ClientSide\\src\\components\\QuestionCard.jsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":20,"column":6,"nodeType":"88","endLine":20,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":66,"column":32,"nodeType":"92","messageId":"93","endLine":66,"endColumn":34},{"ruleId":"94","severity":1,"message":"95","line":67,"column":49,"nodeType":"96","messageId":"97","endLine":67,"endColumn":74},{"ruleId":"90","severity":1,"message":"98","line":69,"column":11,"nodeType":"99","messageId":"100","endLine":69,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":2,"column":31,"nodeType":"103","messageId":"104","endLine":2,"endColumn":39},{"ruleId":"101","severity":1,"message":"105","line":4,"column":33,"nodeType":"103","messageId":"104","endLine":4,"endColumn":37},{"ruleId":"101","severity":1,"message":"106","line":8,"column":9,"nodeType":"103","messageId":"104","endLine":8,"endColumn":19},{"ruleId":"101","severity":1,"message":"107","line":12,"column":10,"nodeType":"103","messageId":"104","endLine":12,"endColumn":14},{"ruleId":"101","severity":1,"message":"108","line":16,"column":7,"nodeType":"103","messageId":"104","endLine":16,"endColumn":8},{"ruleId":"86","severity":1,"message":"109","line":44,"column":6,"nodeType":"88","endLine":44,"endColumn":8,"suggestions":"110"},{"ruleId":"101","severity":1,"message":"111","line":45,"column":9,"nodeType":"103","messageId":"104","endLine":45,"endColumn":10},{"ruleId":"86","severity":1,"message":"87","line":12,"column":6,"nodeType":"88","endLine":12,"endColumn":8,"suggestions":"112"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":31,"nodeType":"103","messageId":"104","endLine":2,"endColumn":39},{"ruleId":"101","severity":1,"message":"105","line":4,"column":21,"nodeType":"103","messageId":"104","endLine":4,"endColumn":25},{"ruleId":"101","severity":1,"message":"113","line":15,"column":10,"nodeType":"103","messageId":"104","endLine":15,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":34,"column":6,"nodeType":"88","endLine":34,"endColumn":8,"suggestions":"114"},{"ruleId":"86","severity":1,"message":"87","line":17,"column":6,"nodeType":"88","endLine":17,"endColumn":8,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["118"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'name' is assigned a value but never used.","'s' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'params.id2'. Either include them or remove the dependency array.",["119"],"'q' is assigned a value but never used.",["120"],"'id' is assigned a value but never used.",["121"],["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"123","fix":"127"},{"desc":"123","fix":"128"},{"desc":"123","fix":"129"},"Update the dependencies array to be: [params.id]",{"range":"130","text":"131"},"Update the dependencies array to be: [params.id, params.id2]",{"range":"132","text":"133"},{"range":"134","text":"131"},{"range":"135","text":"131"},{"range":"136","text":"131"},[615,617],"[params.id]",[1437,1439],"[params.id, params.id2]",[322,324],[1015,1017],[505,507]]