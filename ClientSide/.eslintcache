[{"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\index.js":"1","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\App.jsx":"2","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx":"3","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx":"4","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx":"5","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\ListOfQuizzes.jsx":"6","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AttemptQuiz.jsx":"7","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx":"8","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\PastResultsPage.jsx":"9","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AboutUs.jsx":"10","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AttempterResults.jsx":"11","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx":"12","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx":"13","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\SelectQuiz.jsx":"14","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx":"15","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuizDetail.jsx":"16","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\GetUserDetails.jsx":"17","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx":"18","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuestionBox.jsx":"19"},{"size":249,"mtime":1637662403425,"results":"20","hashOfConfig":"21"},{"size":2349,"mtime":1637732722952,"results":"22","hashOfConfig":"21"},{"size":3859,"mtime":1637739553155,"results":"23","hashOfConfig":"21"},{"size":3173,"mtime":1637732722953,"results":"24","hashOfConfig":"21"},{"size":5763,"mtime":1637739382159,"results":"25","hashOfConfig":"21"},{"size":3943,"mtime":1637734821696,"results":"26","hashOfConfig":"21"},{"size":3719,"mtime":1637678830026,"results":"27","hashOfConfig":"21"},{"size":3515,"mtime":1637662403421,"results":"28","hashOfConfig":"21"},{"size":2730,"mtime":1637739270855,"results":"29","hashOfConfig":"21"},{"size":2531,"mtime":1637739188090,"results":"30","hashOfConfig":"21"},{"size":2217,"mtime":1637738209976,"results":"31","hashOfConfig":"21"},{"size":4050,"mtime":1637678830033,"results":"32","hashOfConfig":"21"},{"size":1939,"mtime":1637678830031,"results":"33","hashOfConfig":"21"},{"size":1096,"mtime":1637732722957,"results":"34","hashOfConfig":"21"},{"size":5723,"mtime":1637662403418,"results":"35","hashOfConfig":"21"},{"size":461,"mtime":1637678830032,"results":"36","hashOfConfig":"21"},{"size":1654,"mtime":1637738574016,"results":"37","hashOfConfig":"21"},{"size":620,"mtime":1637662403424,"results":"38","hashOfConfig":"21"},{"size":750,"mtime":1637662403422,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1unsk35",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\index.js",[],["84","85"],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\App.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx",["86","87"],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx",["88","89","90","91","92","93"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport SelectQuiz from \"./SelectQuiz\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nfunction HomePage(props) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(props.loggedIn);\r\n  let i = 0;\r\n\r\n  // const id = props.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [allQuizzes, setAllQuizzes] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then(\r\n      (response) => {\r\n        setName(response.data.name);\r\n      }\r\n      //WE ARE GETTING ALL OF OUR USER DATA IN response.data\r\n    );\r\n\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      setAllQuizzes(response.data);\r\n\r\n      //WE ARE GETTING ALL OF OUR QUIZZES IN response\r\n    });\r\n\r\n    if (params.id == undefined) {\r\n      setIsLoggedIn(false);\r\n    } else {\r\n      setIsLoggedIn(true);\r\n    }\r\n\r\n    i = 0;\r\n  }, []);\r\n  const q = Object.values(allQuizzes);\r\n  if (true) {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1 onMouseDown={() => navigate(\"/homepage/\" + params.id)}>\r\n            Quizzler\r\n          </h1>\r\n          <div className=\"navbarItems\">\r\n            <nav onClick={() => navigate(\"/createquiz/\" + params.id)}>\r\n              Create a Quiz\r\n            </nav>\r\n            <nav onClick={() => navigate(\"/AboutUs/\" + params.id)}>\r\n              About us\r\n            </nav>\r\n\r\n            <nav\r\n              className=\"UserName\"\r\n              onMouseDown={() => {\r\n                navigate(\"/profile/\" + params.id + \"/\" + params.id);\r\n              }}\r\n            >\r\n              {name}\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        <div className=\"searchbarContainer\">\r\n        <input className=\"Searchbar\"\r\n          type=\"text\"\r\n          placeholder=\"Search Quiz\"\r\n          onChange={(event) => {\r\n            setSearchTerm(event.target.value);\r\n          }}\r\n        />\r\n        </div>\r\n        <div className=\"HomePage\">\r\n          <div className=\"QuizContent\">\r\n            {q\r\n              .filter((q) => {\r\n                if (searchTerm == \"\") {\r\n                  return q;\r\n                } else if (\r\n                  q.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return q;\r\n                }\r\n              })\r\n              .map((q, key) => {\r\n                return (\r\n                  <div>\r\n                    <SelectQuiz\r\n                      key={key}\r\n                      q={q}\r\n                      isLoggedIn={isLoggedIn}\r\n                      id={params.id}\r\n                    />\r\n                  </div>\r\n                );\r\n                i++;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <p> CopyrightÂ© {year} </p>{\" \"}\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n  // navigate(\"/login\"); NAVIGATE IS NOT WORKING!??\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx",["94","95","96","97","98"],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\ListOfQuizzes.jsx",["99"],"import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport QuizDetail from \"./QuizDetail\";\r\nimport userIcons from \"../Images/gamer.png\";\r\n\r\nconst ListOfQuizzes = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [quizzesCreated, setQuizzesCreated] = useState([]);\r\n  const [userData, setUserData] = useState([]);\r\n  const [viewerData, setViewerData] = useState([]);\r\n  let areSame = params.userId === params.viewerId ? true : false;\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.userId).then(\r\n      (response) => {\r\n        setQuizzesCreated(response.data.quizzesCreated);\r\n        setUserData(response.data);\r\n      }\r\n    );\r\n\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.viewerId).then(\r\n      (response) => {\r\n        setViewerData(response.data);\r\n      }\r\n    );\r\n  }, [params.userId]);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 onClick={() => navigate(\"/homepage/\" + params.viewerId)}>\r\n          Quizzler\r\n        </h1>\r\n\r\n        <div className=\"ProfilenavbarItems\">\r\n          <nav onClick={() => navigate(\"/createquiz/\" + params.viewerId)}>\r\n            Create a Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/AboutUs/\" + params.viewerId)}>\r\n            About us\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/homepage/\" + params.viewerId)}>\r\n            Start Quiz\r\n          </nav>\r\n          <nav\r\n            onClick={() =>\r\n              navigate(\"/profile/\" + params.viewerId + \"/\" + params.viewerId)\r\n            }\r\n          >\r\n            {viewerData.name}\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      <div className=\"profilePage\">\r\n        <div className=\"IntroSection\">\r\n          <img className=\"UserImage\" src={userIcons} alt=\"user icon\" />\r\n          <div>\r\n            <h1 className=\"Greetings\">{userData.name}</h1>\r\n            <div className=\"UserDetails\">\r\n              {userData.quizzesCompleted && (\r\n                <div>\r\n                  <p>\r\n                    Quiz Created:{\" \"}\r\n                    {userData.quizzesCreated && (\r\n                      <span className=\"NumOfQuizCreated\">\r\n                        {\" \"}\r\n                        {userData.quizzesCreated.length}\r\n                      </span>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"QuizListBody\">\r\n          <h2>\r\n            These are the Quizzes {areSame && viewerData.name}{\" \"}\r\n            {!areSame && userData.name} created\r\n          </h2>\r\n          {quizzesCreated.map((quizId) => {\r\n            return (\r\n              <div className=\"QuizList\">\r\n                <div className=\"QuizListItems\">\r\n                  {<QuizDetail quizId={quizId} />}\r\n                </div>\r\n                {areSame && (\r\n                  <button\r\n                    className=\"Attempter\"\r\n                    onClick={() => {\r\n                      navigate(\r\n                        \"/AttempterResults/\" +\r\n                          quizId +\r\n                          \"/\" +\r\n                          params.userId +\r\n                          \"/\" +\r\n                          params.userId\r\n                      );\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Attempter Results{\" \"}\r\n                  </button>\r\n                )}\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/attempt/\" + viewerData._id + \"/\" + quizId);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Attempt this Quiz{\" \"}\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfQuizzes;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AttemptQuiz.jsx",["100","101","102","103","104","105"],"import React from \"react\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport QuestionBox from \"./QuestionBox\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nfunction AttemptQuiz(props) {\r\n  const [state, setState] = useState(\"live\");\r\n  const isLoggedIn = props.loggedIn;\r\n  const navigate = useNavigate();\r\n  const [score, setScore] = useState(0);\r\n  const [response, setResponse] = useState(0);\r\n  const [allQues, setQues] = useState([]);\r\n  const [a, setA] = useState([]);\r\n  const params = useParams();\r\n  var s = 0;\r\n\r\n  const submitHandler = async () => {\r\n    if (response === a.length) {\r\n      setState(\"done\");\r\n\r\n      await Axios.post(\r\n        \"http://localhost:3001/updateUserQuizzesCompleted/\" + params.id,\r\n        {\r\n          quizId: params.id2,\r\n          marksScored: score,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const computedAnswer = (answer, correct) => {\r\n    console.log(answer, correct);\r\n    if (answer === correct) {\r\n      s++;\r\n      setScore(score + 1);\r\n    }\r\n    setResponse(response + 1);\r\n  };\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      for (let i = 0; i < response.data.length; i++) {\r\n        if (response.data[i]._id === params.id2) {\r\n          setQues(response.data[i]);\r\n          setA(response.data[i].allQuestions);\r\n          break;\r\n        }\r\n      }\r\n\r\n      //WE ARE GETTING ALL OF OUR QUIZZES IN response\r\n    });\r\n  }, []);\r\n  const q = Object.values(allQues);\r\n  if (true) {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1 onMouseDown={() => navigate(\"/homepage/\")}>Quizzler</h1>\r\n        </header>\r\n\r\n        <div className=\"AttemptPage\">\r\n          <div className=\"AttemptQuizTitle\">\r\n            <h1>{allQues.title}</h1>\r\n          </div>\r\n          <h4>\r\n            <div>\r\n              {state === \"live\" && (\r\n                <div>\r\n                  {a.map((q) => (\r\n                    <div className=\"QuestionContainer\">\r\n                      <QuestionBox\r\n                        question={q.Question}\r\n                        option1={q.option1}\r\n                        option2={q.option2}\r\n                        option3={q.option3}\r\n                        option4={q.option4}\r\n                        selected={(answer) => computedAnswer(answer, q.Answer)}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"AttemptSubmit\">\r\n                    <button className=\"SubmitButton\" onClick={submitHandler}>\r\n                      {\" \"}\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {response === a.length && state === \"done\" ? (\r\n                <h1>\r\n                  <div className=\"QuestionContainer\">\r\n                    <div className=\"AttemptQuizTitle\">\r\n                  Your score is - {score} / {a.length}\r\n                  \r\n                  </div>\r\n                  <div className=\"AttemptQuizTitle\">\r\n                  <button \r\n                    onClick={()=>{\r\n                      navigate(\"/homepage/\" + params.id)\r\n                    }}\r\n                    >Go To Home</button>\r\n                  </div>\r\n                  \r\n                  </div>\r\n                </h1>\r\n              ) : null}\r\n            </div>\r\n          </h4>\r\n        </div>\r\n        <footer className=\"AttemptFooter\">\r\n          <p> CopyrightÂ© {year} </p>{\" \"}\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n  // navigate(\"/login\");   NAVIGATE IS NOT WORKING!??\r\n}\r\n\r\nexport default AttemptQuiz;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\PastResultsPage.jsx",["106"],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AboutUs.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AttempterResults.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx",["107"],"import { useEffect,useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst QuizCreated = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [quiz,setQuiz] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getQuiz/\" + params.id).then((response) => {\r\n      //console.log(response);\r\n      setQuiz(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 onClick={() => navigate(\"/homepage/\" + quiz.userId)}>Quizzler</h1>\r\n\r\n        <div className=\"ProfilenavbarItems\">\r\n          <nav onClick={() => navigate(\"/createquiz/\" + quiz.userId)}>\r\n            Create a Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/AboutUs/\" + quiz.userId)}>About us</nav>\r\n        </div>\r\n      </header>\r\n      <div>\r\n      \r\n      <div className=\"QuizContent\">\r\n      <h1>Success!!! Quiz Created</h1>\r\n        { quiz.allQuestions &&\r\n\r\n          (<table id=\"Results\">\r\n            <tbody>\r\n                  <tr>\r\n                  <td>\r\n                      <h3>s/no</h3>\r\n                  </td>\r\n                  <td>\r\n                      <h3>Question</h3>\r\n                  </td>\r\n                  <td>\r\n                      <h3>Answer</h3>\r\n                  </td>\r\n                  <td>Options</td>\r\n                  </tr>\r\n            {quiz.allQuestions.map((q,key)=>\r\n              <tr key={key}>\r\n                <td>{key + 1}</td>\r\n              <td>{q.Question}</td>\r\n              <td>{q.Answer}</td>\r\n              <td>{q.option1},{q.option2},{q.option3},{q.option4}</td>\r\n            </tr>)}\r\n          </tbody>\r\n          </table>)\r\n        }\r\n        <button \r\n        onClick={()=>{\r\n          navigate(\"/homepage/\" + quiz.userId)\r\n        }}\r\n        >Go To Home</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCreated;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\SelectQuiz.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuizDetail.jsx",["108"],"//import { useParams,useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst QuizDetail = (props) => {\r\n  const [quiz, setQuiz] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getQuiz/\" + props.quizId).then(\r\n      (response) => {\r\n        setQuiz([response.data.title]);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return <span> {quiz} </span>;\r\n};\r\nexport default QuizDetail;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\GetUserDetails.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuestionBox.jsx",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":26,"column":6,"nodeType":"115","endLine":26,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":27,"column":9,"nodeType":"119","messageId":"120","endLine":27,"endColumn":13},{"ruleId":"117","severity":1,"message":"121","line":12,"column":7,"nodeType":"119","messageId":"120","endLine":12,"endColumn":8},{"ruleId":"122","severity":1,"message":"123","line":35,"column":19,"nodeType":"124","messageId":"125","endLine":35,"endColumn":21},{"ruleId":"113","severity":1,"message":"126","line":41,"column":9,"nodeType":"127","endLine":41,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":81,"column":27,"nodeType":"130","messageId":"131","endLine":81,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":82,"column":32,"nodeType":"124","messageId":"125","endLine":82,"endColumn":34},{"ruleId":"132","severity":1,"message":"133","line":101,"column":17,"nodeType":"134","messageId":"135","endLine":101,"endColumn":21},{"ruleId":"113","severity":1,"message":"136","line":21,"column":6,"nodeType":"115","endLine":21,"endColumn":8,"suggestions":"137"},{"ruleId":"117","severity":1,"message":"138","line":23,"column":7,"nodeType":"119","messageId":"120","endLine":23,"endColumn":8},{"ruleId":"128","severity":1,"message":"139","line":66,"column":31,"nodeType":"130","messageId":"140","endLine":66,"endColumn":33},{"ruleId":"128","severity":1,"message":"141","line":81,"column":32,"nodeType":"130","messageId":"131","endLine":81,"endColumn":34},{"ruleId":"128","severity":1,"message":"139","line":84,"column":11,"nodeType":"142","messageId":"143","endLine":84,"endColumn":18},{"ruleId":"113","severity":1,"message":"144","line":28,"column":6,"nodeType":"115","endLine":28,"endColumn":21,"suggestions":"145"},{"ruleId":"117","severity":1,"message":"146","line":2,"column":31,"nodeType":"119","messageId":"120","endLine":2,"endColumn":39},{"ruleId":"117","severity":1,"message":"147","line":4,"column":34,"nodeType":"119","messageId":"120","endLine":4,"endColumn":38},{"ruleId":"117","severity":1,"message":"148","line":12,"column":9,"nodeType":"119","messageId":"120","endLine":12,"endColumn":19},{"ruleId":"117","severity":1,"message":"149","line":19,"column":7,"nodeType":"119","messageId":"120","endLine":19,"endColumn":8},{"ruleId":"113","severity":1,"message":"150","line":55,"column":6,"nodeType":"115","endLine":55,"endColumn":8,"suggestions":"151"},{"ruleId":"117","severity":1,"message":"152","line":56,"column":9,"nodeType":"119","messageId":"120","endLine":56,"endColumn":10},{"ruleId":"113","severity":1,"message":"136","line":15,"column":6,"nodeType":"115","endLine":15,"endColumn":8,"suggestions":"153"},{"ruleId":"113","severity":1,"message":"136","line":15,"column":6,"nodeType":"115","endLine":15,"endColumn":8,"suggestions":"154"},{"ruleId":"113","severity":1,"message":"155","line":13,"column":6,"nodeType":"115","endLine":13,"endColumn":8,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.id' and 'params.viewerId'. Either include them or remove the dependency array.","ArrayExpression",["159"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'i' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'i' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["160"],"'x' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'params.viewerId'. Either include it or remove the dependency array.",["161"],"'Fragment' is defined but never used.","'Link' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'s' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.id2'. Either include it or remove the dependency array.",["162"],"'q' is assigned a value but never used.",["163"],["164"],"React Hook useEffect has a missing dependency: 'props.quizId'. Either include it or remove the dependency array.",["165"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"168","fix":"174"},{"desc":"168","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [params.id, params.viewerId]",{"range":"178","text":"179"},"Update the dependencies array to be: [params.id]",{"range":"180","text":"181"},"Update the dependencies array to be: [params.userId, params.viewerId]",{"range":"182","text":"183"},"Update the dependencies array to be: [params.id2]",{"range":"184","text":"185"},{"range":"186","text":"181"},{"range":"187","text":"181"},"Update the dependencies array to be: [props.quizId]",{"range":"188","text":"189"},[823,825],"[params.id, params.viewerId]",[661,663],"[params.id]",[937,952],"[params.userId, params.viewerId]",[1550,1552],"[params.id2]",[470,472],[452,454],[388,390],"[props.quizId]"]