[{"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\index.js":"1","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\App.jsx":"2","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx":"3","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx":"4","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx":"5","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx":"6","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx":"7","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx":"8","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\QuestionCard.jsx":"9","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx":"10","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx":"11"},{"size":249,"mtime":1637213710212,"results":"12","hashOfConfig":"13"},{"size":1292,"mtime":1637219708368,"results":"14","hashOfConfig":"13"},{"size":3771,"mtime":1637214157274,"results":"15","hashOfConfig":"13"},{"size":1404,"mtime":1637217035438,"results":"16","hashOfConfig":"13"},{"size":3245,"mtime":1637214132437,"results":"17","hashOfConfig":"13"},{"size":3788,"mtime":1637215699215,"results":"18","hashOfConfig":"13"},{"size":6073,"mtime":1637213710208,"results":"19","hashOfConfig":"13"},{"size":620,"mtime":1637213710211,"results":"20","hashOfConfig":"13"},{"size":131,"mtime":1637213710210,"results":"21","hashOfConfig":"13"},{"size":486,"mtime":1637174079131,"results":"22","hashOfConfig":"13"},{"size":1723,"mtime":1637219771467,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"tw23dg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\index.js",[],["50","51"],"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\App.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx",["52"],"import React from \"react\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nfunction HomePage(props) {\r\n  const isLoggedIn = props.loggedIn;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [allQuizzes, setAllQuizzes] = useState({});\r\n\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setName(response.data.name);\r\n      //WE ARE GETTING ALL OF OUR USER DATA IN response.data\r\n    });\r\n\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      setAllQuizzes(response.data);\r\n\r\n      //WE ARE GETTING ALL OF OUR QUIZZES IN response\r\n    });\r\n  }, []);\r\n\r\n  if (isLoggedIn) {\r\n    return (\r\n      <Fragment>\r\n        <header>\r\n          <h1>Quizzler</h1>\r\n          <ul className=\"navbarItems\">\r\n            <li>Create a Quiz</li>\r\n            <li>About us</li>\r\n            <li>Take a Quiz</li>\r\n            <li>\r\n              <Link to=\"/userProfile/\" />\r\n              {name}\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"Signup\">\r\n            <button>Sign Up</button>\r\n          </div>\r\n        </header>\r\n        <div>{console.log(allQuizzes)}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n  // navigate(\"/login\");   NAVIGATE IS NOT WORKING!??\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx",["53","54","55"],"import AddQuestion from \"./AddQuestion\";\r\nimport { useState } from \"react\";\r\nimport useBasicInput from \"../hooks/usebasic-input\";\r\nimport React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CreateQuizPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [allQutions, addques] = useState([]);\r\n  const n = 2;\r\n  var x = 0;\r\n  var t = \"public\";\r\n  const Quiztype = (e) => {\r\n    t = e.target.value;\r\n  };\r\n  const data = (Q) => {\r\n    const item = Q;\r\n    addques([...allQutions, item]);\r\n    x++;\r\n    console.log(x);\r\n    //console.log(allQutions);\r\n  };\r\n  const {\r\n    value: title,\r\n    valueChangeHandler: titleChangeHandler,\r\n    valueIsValid: titleIsValid,\r\n    onBlurHandler: titleBlurHandler,\r\n    inputTouched: titleInputTouched,\r\n    reset: titleReset,\r\n  } = useBasicInput((value) => value.trim().length !== 0);\r\n\r\n  const {\r\n    value: Description,\r\n    valueChangeHandler: DescriptionChangeHandler,\r\n    valueIsValid: DescriptionIsValid,\r\n    onBlurHandler: DescriptionBlurHandler,\r\n    inputTouched: DescriptionInputTouched,\r\n    reset: DescriptionReset,\r\n  } = useBasicInput((value) => value.trim().length !== 0);\r\n\r\n  const submissionHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    Axios.post(\"http://localhost:3001/postQuiz\", {\r\n      title: title,\r\n      description: Description,\r\n      t: t,\r\n      allQuestions: allQutions,\r\n    });\r\n\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      response.data.map((data) => {\r\n        if (data.description === Description && data.title === data.title) {\r\n          navigate(\"/quizCreated/\" + data._id);\r\n          return;\r\n        }\r\n      });\r\n    });\r\n\r\n    DescriptionReset();\r\n    titleReset();\r\n    //console.log(des.quizDescription, des.quizTitle);\r\n  };\r\n\r\n  const DescriptionInputClasses =\r\n    !DescriptionIsValid && DescriptionInputTouched ? \"invalid\" : \"\";\r\n  const titleInputClasses = !titleIsValid && titleInputTouched ? \"invalid\" : \"\";\r\n  const formIsValid =\r\n    DescriptionIsValid && titleIsValid && allQutions.length === n;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Quiz</h2>\r\n      <form onSubmit={submissionHandler}>\r\n        <div className={`form-control ${titleInputClasses}`}>\r\n          <label>Quiz Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onBlur={titleBlurHandler}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className={`form-control ${DescriptionInputClasses}`}>\r\n          <label>Quiz Description</label>\r\n          <input\r\n            type=\"text-area\"\r\n            value={Description}\r\n            onBlur={DescriptionBlurHandler}\r\n            onChange={DescriptionChangeHandler}\r\n          />\r\n        </div>\r\n        <div className={`form-control`} onClick={Quiztype}>\r\n          <label>private</label>\r\n          <input type=\"radio\" name=\"quiz-type\" value=\"private\" />\r\n          <label>public</label>\r\n          <input type=\"radio\" name=\"quiz-type\" value=\"public\" checked />\r\n        </div>\r\n        <div className={`form-control`}>\r\n          <section>\r\n            {Array.from({ length: n }, (_, i) => (\r\n              <div>\r\n                <strong>Question {i + 1}</strong>\r\n                <br></br>\r\n                <br></br>\r\n                <AddQuestion data={data} />\r\n                <br></br>\r\n                <hr></hr>\r\n              </div>\r\n            ))}\r\n          </section>\r\n        </div>\r\n        <div>\r\n          <button className=\"form-actions\" type=\"submit\" value=\"Create Quiz\">\r\n            {\" \"}\r\n            Create Quiz !\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuizPage;\r\n","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\QuestionCard.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx",["56"],"import { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst QuizCreated = () => {\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getQuiz/\" + params.id).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      This page shows the quiz user just created!(Look at the browser console)\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCreated;\r\n","C:\\Users\\Abhijeet\\Desktop\\New Folder\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":25,"column":6,"nodeType":"64","endLine":25,"endColumn":8,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":56,"column":32,"nodeType":"68","messageId":"69","endLine":56,"endColumn":34},{"ruleId":"70","severity":1,"message":"71","line":57,"column":49,"nodeType":"72","messageId":"73","endLine":57,"endColumn":74},{"ruleId":"66","severity":1,"message":"74","line":59,"column":11,"nodeType":"75","messageId":"76","endLine":59,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":12,"column":6,"nodeType":"64","endLine":12,"endColumn":8,"suggestions":"77"},{"ruleId":"62","severity":1,"message":"63","line":14,"column":6,"nodeType":"64","endLine":14,"endColumn":8,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["81"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["82"],["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"84","fix":"86"},{"desc":"84","fix":"87"},"Update the dependencies array to be: [params.id]",{"range":"88","text":"89"},{"range":"90","text":"89"},{"range":"91","text":"89"},[759,761],"[params.id]",[322,324],[389,391]]