[{"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\index.js":"1","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\App.jsx":"2","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx":"3","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx":"4","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx":"5","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\ListOfQuizzes.jsx":"6","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AttemptQuiz.jsx":"7","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx":"8","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\PastResultsPage.jsx":"9","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AboutUs.jsx":"10","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AttempterResults.jsx":"11","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx":"12","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx":"13","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\SelectQuiz.jsx":"14","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx":"15","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuizDetail.jsx":"16","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\GetUserDetails.jsx":"17","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx":"18","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuestionBox.jsx":"19"},{"size":249,"mtime":1637662403425,"results":"20","hashOfConfig":"21"},{"size":2349,"mtime":1637732722952,"results":"22","hashOfConfig":"21"},{"size":3852,"mtime":1637733518197,"results":"23","hashOfConfig":"21"},{"size":3173,"mtime":1637732722953,"results":"24","hashOfConfig":"21"},{"size":5830,"mtime":1637678830028,"results":"25","hashOfConfig":"21"},{"size":3943,"mtime":1637734821696,"results":"26","hashOfConfig":"21"},{"size":3719,"mtime":1637678830026,"results":"27","hashOfConfig":"21"},{"size":3515,"mtime":1637662403421,"results":"28","hashOfConfig":"21"},{"size":2508,"mtime":1637678830030,"results":"29","hashOfConfig":"21"},{"size":2513,"mtime":1637662403417,"results":"30","hashOfConfig":"21"},{"size":2567,"mtime":1637678830027,"results":"31","hashOfConfig":"21"},{"size":4050,"mtime":1637678830033,"results":"32","hashOfConfig":"21"},{"size":1939,"mtime":1637678830031,"results":"33","hashOfConfig":"21"},{"size":1096,"mtime":1637732722957,"results":"34","hashOfConfig":"21"},{"size":5723,"mtime":1637662403418,"results":"35","hashOfConfig":"21"},{"size":461,"mtime":1637678830032,"results":"36","hashOfConfig":"21"},{"size":1371,"mtime":1637678830029,"results":"37","hashOfConfig":"21"},{"size":620,"mtime":1637662403424,"results":"38","hashOfConfig":"21"},{"size":750,"mtime":1637662403422,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1unsk35",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\index.js",[],["88","89"],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\App.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx",["90","91"],"import React from \"react\";\r\nimport userIcons from \"../Images/gamer.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nfunction Profile() {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [userData, setUserData] = useState([]);\r\n  const [viewerData, setViewerData] = useState([]);\r\n  let areSame = params.id === params.viewerId ? true : false;\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setUserData(response.data);\r\n    });\r\n\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.viewerId).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setViewerData(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n  const data = Object.values(userData);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 onClick={() => navigate(\"/homepage/\" + params.viewerId)}>\r\n          Quizzler\r\n        </h1>\r\n\r\n        <div className=\"ProfilenavbarItems\">\r\n          <nav onClick={() => navigate(\"/createquiz/\" + params.id)}>\r\n            Create a Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/AboutUs/\" + params.id)}>About us</nav>\r\n          <nav onClick={() => navigate(\"/homepage/\" + params.id)}>\r\n            Select Quiz\r\n          </nav>\r\n          <nav>{viewerData.name}</nav>\r\n        </div>\r\n      </header>\r\n      <div className=\"profilePage\">\r\n        <div className=\"IntroSection\">\r\n          <img className=\"UserImage\" src={userIcons} alt=\"user icon\" />\r\n          <div>\r\n            <h1 className=\"Greetings\">{userData.name}</h1>\r\n            <div className=\"UserDetails\">\r\n              {userData.quizzesCompleted && (\r\n                <div>\r\n                  <p>\r\n                    Quiz Attempted:{\" \"}\r\n                    <span className=\"NumOfQuizAttempted\">\r\n                      {\" \"}\r\n                      {userData.quizzesCompleted.length}\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    Quiz Created:{\" \"}\r\n                    {userData.quizzesCreated && (\r\n                      <span className=\"NumOfQuizCreated\">\r\n                        {\" \"}\r\n                        {userData.quizzesCreated.length}\r\n                      </span>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"ResultsContainer\">\r\n          <div className=\"HostResult\">\r\n            {areSame && <h1>Results of your Quizzes</h1>}\r\n            {areSame && <p>To check the results of the quizzes you created </p>}\r\n            {!areSame && <h1>List Of Quizzes</h1>}\r\n            {!areSame && (\r\n              <p>To check list of quizzes created by {userData.name}</p>\r\n            )}\r\n\r\n            <button\r\n              type=\"button\"\r\n              onMouseDown={() => {\r\n                navigate(\r\n                  \"/listOfAllQuizzes/\" + userData._id + \"/\" + viewerData._id\r\n                );\r\n              }}\r\n            >\r\n              Click Here\r\n            </button>\r\n          </div>\r\n          {areSame && (\r\n            <div className=\"QuizAttemptedResult\">\r\n              <h1>Your Past Results</h1>\r\n              <p>To check the results of the quizzes you attempted </p>\r\n              <button\r\n                type=\"button\"\r\n                onMouseDown={() => {\r\n                  navigate(\"/pastResults/\" + userData._id);\r\n                }}\r\n              >\r\n                Click Here\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        <p> Copyright© {year} </p>{\" \"}\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx",["92","93","94","95","96","97"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport SelectQuiz from \"./SelectQuiz\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nfunction HomePage(props) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(props.loggedIn);\r\n  let i = 0;\r\n\r\n  // const id = props.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [allQuizzes, setAllQuizzes] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then(\r\n      (response) => {\r\n        setName(response.data.name);\r\n      }\r\n      //WE ARE GETTING ALL OF OUR USER DATA IN response.data\r\n    );\r\n\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      setAllQuizzes(response.data);\r\n\r\n      //WE ARE GETTING ALL OF OUR QUIZZES IN response\r\n    });\r\n\r\n    if (params.id == undefined) {\r\n      setIsLoggedIn(false);\r\n    } else {\r\n      setIsLoggedIn(true);\r\n    }\r\n\r\n    i = 0;\r\n  }, []);\r\n  const q = Object.values(allQuizzes);\r\n  if (true) {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1 onMouseDown={() => navigate(\"/homepage/\" + params.id)}>\r\n            Quizzler\r\n          </h1>\r\n          <div className=\"navbarItems\">\r\n            <nav onClick={() => navigate(\"/createquiz/\" + params.id)}>\r\n              Create a Quiz\r\n            </nav>\r\n            <nav onClick={() => navigate(\"/AboutUs/\" + params.id)}>\r\n              About us\r\n            </nav>\r\n\r\n            <nav\r\n              className=\"UserName\"\r\n              onMouseDown={() => {\r\n                navigate(\"/profile/\" + params.id + \"/\" + params.id);\r\n              }}\r\n            >\r\n              {name}\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        <div className=\"searchbarContainer\">\r\n        <input className=\"Searchbar\"\r\n          type=\"text\"\r\n          placeholder=\"Search Quiz\"\r\n          onChange={(event) => {\r\n            setSearchTerm(event.target.value);\r\n          }}\r\n        />\r\n        </div>\r\n        <div className=\"HomePage\">\r\n          <div className=\"QuizContent\">\r\n            {q\r\n              .filter((q) => {\r\n                if (searchTerm == \"\") {\r\n                  return q;\r\n                } else if (\r\n                  q.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n                ) {\r\n                  return q;\r\n                }\r\n              })\r\n              .map((q, key) => {\r\n                return (\r\n                  <div>\r\n                    <SelectQuiz\r\n                      key={key}\r\n                      q={q}\r\n                      isLoggedIn={isLoggedIn}\r\n                      id={params.id}\r\n                    />\r\n                  </div>\r\n                );\r\n                i++;\r\n              })}\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <p> Copyright© {year} </p>{\" \"}\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n  // navigate(\"/login\"); NAVIGATE IS NOT WORKING!??\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx",["98","99","100","101"],"import AddQuestion from \"./AddQuestion\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useBasicInput from \"../hooks/usebasic-input\";\r\nimport React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n//import QuestionCard from \"./QuestionCard\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nconst CreateQuizPage = () => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setUserData(response.data);\r\n    });\r\n  }, []);\r\n  const [allQutions, addques] = useState([]);\r\n  var x = 0;\r\n  var t = \"public\";\r\n  let quizCreatedId = \"\";\r\n  const Quiztype = (e) => {\r\n    t = e.target.value;\r\n  };\r\n  const data = (Q) => {\r\n    const item = Q;\r\n    addques([...allQutions, item]);\r\n    x++;\r\n    console.log(x);\r\n    //console.log(allQutions);\r\n  };\r\n  const {\r\n    value: title,\r\n    valueChangeHandler: titleChangeHandler,\r\n    valueIsValid: titleIsValid,\r\n    onBlurHandler: titleBlurHandler,\r\n    inputTouched: titleInputTouched,\r\n    reset: titleReset,\r\n  } = useBasicInput((value) => value.trim().length !== 0);\r\n\r\n  const {\r\n    value: Description,\r\n    valueChangeHandler: DescriptionChangeHandler,\r\n    valueIsValid: DescriptionIsValid,\r\n    onBlurHandler: DescriptionBlurHandler,\r\n    inputTouched: DescriptionInputTouched,\r\n    reset: DescriptionReset,\r\n  } = useBasicInput((value) => value.trim().length !== 0);\r\n\r\n  const submissionHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    await Axios.post(\"http://localhost:3001/postQuiz\", {\r\n      title: title,\r\n      description: Description,\r\n      t: t,\r\n      allQuestions: allQutions,\r\n      userId: userData._id,\r\n    });\r\n\r\n    await Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      response.data.map((val) => {\r\n        if (val.userId === userData._id && val.title === title) {\r\n          quizCreatedId = val._id;\r\n        }\r\n      });\r\n    });\r\n\r\n    await Axios.post(\r\n      \"http://localhost:3001/updateUserQuizzesCreated/\" + userData._id,\r\n      {\r\n        quizId: quizCreatedId,\r\n      }\r\n    );\r\n\r\n    await Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      response.data.map((data) => {\r\n        if (data.description === Description && data.title === title) {\r\n          navigate(\"/quizCreated/\" + data._id);\r\n          return;\r\n        }\r\n      });\r\n    });\r\n\r\n    DescriptionReset();\r\n    titleReset();\r\n    //console.log(des.quizDescription, des.quizTitle);\r\n  };\r\n\r\n  const DescriptionInputClasses =\r\n    !DescriptionIsValid && DescriptionInputTouched ? \"invalid\" : \"\";\r\n  const titleInputClasses = !titleIsValid && titleInputTouched ? \"invalid\" : \"\";\r\n  const formIsValid =\r\n    DescriptionIsValid && titleIsValid && allQutions.length >= 1;\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 onMouseDown={() => navigate(\"/homepage/\" + params.id)}>Quizzler</h1>\r\n        <div className=\"navbarItems\">\r\n          <nav\r\n            onClick={() => {\r\n              return (\r\n                <div>\r\n                  {\r\n                    navigate(\"/homepage/\" + params.id)\r\n                    //console.log(props.q.allQuestions)\r\n                  }\r\n                </div>\r\n              );\r\n            }}\r\n          >\r\n            Attempt a Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/AboutUs/\" + params.id)}>About us</nav>\r\n          <nav>{userData.name}</nav>\r\n        </div>\r\n      </header>\r\n      <div className=\"CreateQuizPage\">\r\n        <form onSubmit={submissionHandler}>\r\n          <div className=\"QuizInfoContainer\">\r\n            <div className={`form-control ${titleInputClasses}`}>\r\n              <label className=\"quizTitle\">Quiz Title</label>\r\n              <br />\r\n              <input\r\n                type=\"textarea\"\r\n                value={title}\r\n                onBlur={titleBlurHandler}\r\n                onChange={titleChangeHandler}\r\n                className=\"quizTitleInput\"\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className={`form-control ${DescriptionInputClasses}`}>\r\n              <label className=\"quizDescription\">Quiz Description</label>\r\n              <br />\r\n              <textarea\r\n                value={Description}\r\n                onBlur={DescriptionBlurHandler}\r\n                onChange={DescriptionChangeHandler}\r\n                className=\"quizDescriptionInput\"\r\n                rows=\"30\"\r\n                cols=\"70\"\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className={`form-control`} onClick={Quiztype}>\r\n            </div>\r\n          </div>\r\n          <div className={`form-control`}>\r\n            {allQutions.length >= 1 && (\r\n              <div className=\"QuizInfoContainer\">\r\n                {allQutions.map((q, key) => (\r\n                  <div>\r\n                    Question {key + 1}) {q.Question}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            <section>\r\n              {\r\n                <div className=\"QuestionCard\">\r\n                  <strong>Question</strong>\r\n                  <br></br>\r\n                  <br></br>\r\n\r\n                  <AddQuestion data={data} />\r\n                </div>\r\n              }\r\n            </section>\r\n          </div>\r\n          <div>\r\n            <button className=\"form-actions\" type=\"submit\" value=\"Create Quiz\">\r\n              {\" \"}\r\n              Create Quiz !\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <footer>\r\n        <p> Copyright© {year} </p>{\" \"}\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuizPage;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\ListOfQuizzes.jsx",["102"],"import { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport QuizDetail from \"./QuizDetail\";\r\nimport userIcons from \"../Images/gamer.png\";\r\n\r\nconst ListOfQuizzes = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [quizzesCreated, setQuizzesCreated] = useState([]);\r\n  const [userData, setUserData] = useState([]);\r\n  const [viewerData, setViewerData] = useState([]);\r\n  let areSame = params.userId === params.viewerId ? true : false;\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.userId).then(\r\n      (response) => {\r\n        setQuizzesCreated(response.data.quizzesCreated);\r\n        setUserData(response.data);\r\n      }\r\n    );\r\n\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.viewerId).then(\r\n      (response) => {\r\n        setViewerData(response.data);\r\n      }\r\n    );\r\n  }, [params.userId]);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 onClick={() => navigate(\"/homepage/\" + params.viewerId)}>\r\n          Quizzler\r\n        </h1>\r\n\r\n        <div className=\"ProfilenavbarItems\">\r\n          <nav onClick={() => navigate(\"/createquiz/\" + params.viewerId)}>\r\n            Create a Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/AboutUs/\" + params.viewerId)}>\r\n            About us\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/homepage/\" + params.viewerId)}>\r\n            Start Quiz\r\n          </nav>\r\n          <nav\r\n            onClick={() =>\r\n              navigate(\"/profile/\" + params.viewerId + \"/\" + params.viewerId)\r\n            }\r\n          >\r\n            {viewerData.name}\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      <div className=\"profilePage\">\r\n        <div className=\"IntroSection\">\r\n          <img className=\"UserImage\" src={userIcons} alt=\"user icon\" />\r\n          <div>\r\n            <h1 className=\"Greetings\">{userData.name}</h1>\r\n            <div className=\"UserDetails\">\r\n              {userData.quizzesCompleted && (\r\n                <div>\r\n                  <p>\r\n                    Quiz Created:{\" \"}\r\n                    {userData.quizzesCreated && (\r\n                      <span className=\"NumOfQuizCreated\">\r\n                        {\" \"}\r\n                        {userData.quizzesCreated.length}\r\n                      </span>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"QuizListBody\">\r\n          <h2>\r\n            These are the Quizzes {areSame && viewerData.name}{\" \"}\r\n            {!areSame && userData.name} created\r\n          </h2>\r\n          {quizzesCreated.map((quizId) => {\r\n            return (\r\n              <div className=\"QuizList\">\r\n                <div className=\"QuizListItems\">\r\n                  {<QuizDetail quizId={quizId} />}\r\n                </div>\r\n                {areSame && (\r\n                  <button\r\n                    className=\"Attempter\"\r\n                    onClick={() => {\r\n                      navigate(\r\n                        \"/AttempterResults/\" +\r\n                          quizId +\r\n                          \"/\" +\r\n                          params.userId +\r\n                          \"/\" +\r\n                          params.userId\r\n                      );\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Attempter Results{\" \"}\r\n                  </button>\r\n                )}\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/attempt/\" + viewerData._id + \"/\" + quizId);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  Attempt this Quiz{\" \"}\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListOfQuizzes;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AttemptQuiz.jsx",["103","104","105","106","107","108"],"import React from \"react\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport QuestionBox from \"./QuestionBox\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nfunction AttemptQuiz(props) {\r\n  const [state, setState] = useState(\"live\");\r\n  const isLoggedIn = props.loggedIn;\r\n  const navigate = useNavigate();\r\n  const [score, setScore] = useState(0);\r\n  const [response, setResponse] = useState(0);\r\n  const [allQues, setQues] = useState([]);\r\n  const [a, setA] = useState([]);\r\n  const params = useParams();\r\n  var s = 0;\r\n\r\n  const submitHandler = async () => {\r\n    if (response === a.length) {\r\n      setState(\"done\");\r\n\r\n      await Axios.post(\r\n        \"http://localhost:3001/updateUserQuizzesCompleted/\" + params.id,\r\n        {\r\n          quizId: params.id2,\r\n          marksScored: score,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const computedAnswer = (answer, correct) => {\r\n    console.log(answer, correct);\r\n    if (answer === correct) {\r\n      s++;\r\n      setScore(score + 1);\r\n    }\r\n    setResponse(response + 1);\r\n  };\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      for (let i = 0; i < response.data.length; i++) {\r\n        if (response.data[i]._id === params.id2) {\r\n          setQues(response.data[i]);\r\n          setA(response.data[i].allQuestions);\r\n          break;\r\n        }\r\n      }\r\n\r\n      //WE ARE GETTING ALL OF OUR QUIZZES IN response\r\n    });\r\n  }, []);\r\n  const q = Object.values(allQues);\r\n  if (true) {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1 onMouseDown={() => navigate(\"/homepage/\")}>Quizzler</h1>\r\n        </header>\r\n\r\n        <div className=\"AttemptPage\">\r\n          <div className=\"AttemptQuizTitle\">\r\n            <h1>{allQues.title}</h1>\r\n          </div>\r\n          <h4>\r\n            <div>\r\n              {state === \"live\" && (\r\n                <div>\r\n                  {a.map((q) => (\r\n                    <div className=\"QuestionContainer\">\r\n                      <QuestionBox\r\n                        question={q.Question}\r\n                        option1={q.option1}\r\n                        option2={q.option2}\r\n                        option3={q.option3}\r\n                        option4={q.option4}\r\n                        selected={(answer) => computedAnswer(answer, q.Answer)}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"AttemptSubmit\">\r\n                    <button className=\"SubmitButton\" onClick={submitHandler}>\r\n                      {\" \"}\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {response === a.length && state === \"done\" ? (\r\n                <h1>\r\n                  <div className=\"QuestionContainer\">\r\n                    <div className=\"AttemptQuizTitle\">\r\n                  Your score is - {score} / {a.length}\r\n                  \r\n                  </div>\r\n                  <div className=\"AttemptQuizTitle\">\r\n                  <button \r\n                    onClick={()=>{\r\n                      navigate(\"/homepage/\" + params.id)\r\n                    }}\r\n                    >Go To Home</button>\r\n                  </div>\r\n                  \r\n                  </div>\r\n                </h1>\r\n              ) : null}\r\n            </div>\r\n          </h4>\r\n        </div>\r\n        <footer className=\"AttemptFooter\">\r\n          <p> Copyright© {year} </p>{\" \"}\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n  // navigate(\"/login\");   NAVIGATE IS NOT WORKING!??\r\n}\r\n\r\nexport default AttemptQuiz;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\PastResultsPage.jsx",["109"],"import { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport QuizDetail from \"./QuizDetail\";\r\n\r\nconst PastResultsPage = () => {\r\n  const params = useParams();\r\n  const [userData, setData] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setData(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 onClick={() => navigate(\"/homepage/\" + params.id)}>Quizzler</h1>\r\n\r\n        <div className=\"ProfilenavbarItems\">\r\n          <nav onClick={() => navigate(\"/createquiz/\" + params.id)}>\r\n            Create a Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/AboutUs/\" + params.id)}>About us</nav>\r\n          <nav>Start Quiz</nav>\r\n          <nav onClick={() => navigate(\"/Profile/\" + params.id)}>\r\n            {userData.name}\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      <div>\r\n        {userData.quizzesCompleted && (\r\n          <div>\r\n            <h1 className=\"Title\">Past Results</h1>\r\n            <table id=\"Results\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <h3>s/no</h3>\r\n                  </td>\r\n                  <td>\r\n                    <h3>Quiz Title</h3>\r\n                  </td>\r\n                  <td>\r\n                    <h3>score</h3>\r\n                  </td>\r\n                </tr>\r\n                {userData.quizzesCompleted.map((q, key) => (\r\n                  <tr key={key}>\r\n                    <td> {key + 1}</td>\r\n                    <td>{<QuizDetail quizId={q.quizId} />}</td>\r\n                    <td>\r\n                      ({q.marksScored})/{<QuizMarks quizId={q.quizId} />}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst QuizMarks = (props) => {\r\n  const [quiz, setQuiz] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n      for (let i = 0; i < response.data.length; i++) {\r\n        if (props.quizId === response.data[i]._id) {\r\n          setQuiz([response.data[i].allQuestions.length]);\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }, [props.quizId]);\r\n\r\n  return <span> {quiz} </span>;\r\n};\r\nexport default PastResultsPage;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AboutUs.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AttempterResults.jsx",["110"],"import { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport GetUserDetails from \"./GetUserDetails\";\r\nimport userIcons from \"../Images/gamer.png\";\r\n\r\nconst AttempterResults = () => {\r\n  const navigate = useNavigate();\r\n  const [attempterIDs, setAttempterIDs] = useState([]);\r\n  const [userData, setUserData] = useState([]);\r\n  const params = useParams();\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getQuiz/\" + params.quizId).then(\r\n      (response) => {\r\n        setAttempterIDs(response.data.attempterIDs);\r\n      }\r\n    );\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.hostId).then(\r\n      (response) => {\r\n        setUserData(response.data);\r\n      }\r\n    );\r\n  }, [params.hostId, params.quizId]);\r\n\r\n  let viewing = () => {\r\n    if (params.viewerId === params.hostId) {\r\n      return (\r\n        <div>\r\n          This page is being viewed by host.\r\n          <br />\r\n          WORK IN PROGRESS\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          You are only allowed to check scores of quizzes that you have hosted.\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {viewing()} */}\r\n      <header>\r\n        <h1 onClick={() => navigate(\"/homepage/\" + params.viewerId)}>\r\n          Quizzler\r\n        </h1>\r\n\r\n        <div className=\"ProfilenavbarItems\">\r\n          <nav onClick={() => navigate(\"/createquiz/\" + params.viewerId)}>\r\n            Create a Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/AboutUs/\" + params.viewerId)}>\r\n            About us\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/homepage/\" + params.viewerId)}>\r\n            Start Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/profile/\" + params.viewerId)}>\r\n            {userData.name}\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      <div className=\"profilePage\">\r\n        <div className=\"IntroSection\">\r\n          <img className=\"UserImage\" src={userIcons} alt=\"user icon\" />\r\n          <div>\r\n            <h1 className=\"Greetings\">Hello {userData.name}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"ResultOfAttempter\">\r\n          {attempterIDs.length ? attempterIDs.map((attempterID) => {\r\n            return (\r\n              <GetUserDetails userId={attempterID} quizId={params.quizId} />\r\n            );\r\n          }) : <div>Sorry NoOne Attempted this Quiz</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttempterResults;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx",["111"],"import { useEffect,useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst QuizCreated = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [quiz,setQuiz] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getQuiz/\" + params.id).then((response) => {\r\n      //console.log(response);\r\n      setQuiz(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 onClick={() => navigate(\"/homepage/\" + quiz.userId)}>Quizzler</h1>\r\n\r\n        <div className=\"ProfilenavbarItems\">\r\n          <nav onClick={() => navigate(\"/createquiz/\" + quiz.userId)}>\r\n            Create a Quiz\r\n          </nav>\r\n          <nav onClick={() => navigate(\"/AboutUs/\" + quiz.userId)}>About us</nav>\r\n        </div>\r\n      </header>\r\n      <div>\r\n      \r\n      <div className=\"QuizContent\">\r\n      <h1>Success!!! Quiz Created</h1>\r\n        { quiz.allQuestions &&\r\n\r\n          (<table id=\"Results\">\r\n            <tbody>\r\n                  <tr>\r\n                  <td>\r\n                      <h3>s/no</h3>\r\n                  </td>\r\n                  <td>\r\n                      <h3>Question</h3>\r\n                  </td>\r\n                  <td>\r\n                      <h3>Answer</h3>\r\n                  </td>\r\n                  <td>Options</td>\r\n                  </tr>\r\n            {quiz.allQuestions.map((q,key)=>\r\n              <tr key={key}>\r\n                <td>{key + 1}</td>\r\n              <td>{q.Question}</td>\r\n              <td>{q.Answer}</td>\r\n              <td>{q.option1},{q.option2},{q.option3},{q.option4}</td>\r\n            </tr>)}\r\n          </tbody>\r\n          </table>)\r\n        }\r\n        <button \r\n        onClick={()=>{\r\n          navigate(\"/homepage/\" + quiz.userId)\r\n        }}\r\n        >Go To Home</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCreated;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\SelectQuiz.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuizDetail.jsx",["112"],"//import { useParams,useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst QuizDetail = (props) => {\r\n  const [quiz, setQuiz] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getQuiz/\" + props.quizId).then(\r\n      (response) => {\r\n        setQuiz([response.data.title]);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return <span> {quiz} </span>;\r\n};\r\nexport default QuizDetail;\r\n","C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\GetUserDetails.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx",[],"C:\\Users\\Abhijeet\\Desktop\\SE Project\\The-Quizzler\\ClientSide\\src\\components\\QuestionBox.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":27,"column":6,"nodeType":"119","endLine":27,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":28,"column":9,"nodeType":"123","messageId":"124","endLine":28,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":12,"column":7,"nodeType":"123","messageId":"124","endLine":12,"endColumn":8},{"ruleId":"126","severity":1,"message":"127","line":35,"column":19,"nodeType":"128","messageId":"129","endLine":35,"endColumn":21},{"ruleId":"117","severity":1,"message":"130","line":41,"column":9,"nodeType":"131","endLine":41,"endColumn":10},{"ruleId":"132","severity":1,"message":"133","line":81,"column":27,"nodeType":"134","messageId":"135","endLine":81,"endColumn":29},{"ruleId":"126","severity":1,"message":"127","line":82,"column":32,"nodeType":"128","messageId":"129","endLine":82,"endColumn":34},{"ruleId":"136","severity":1,"message":"137","line":101,"column":17,"nodeType":"138","messageId":"139","endLine":101,"endColumn":21},{"ruleId":"117","severity":1,"message":"140","line":21,"column":6,"nodeType":"119","endLine":21,"endColumn":8,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"142","line":68,"column":31,"nodeType":"134","messageId":"143","endLine":68,"endColumn":33},{"ruleId":"132","severity":1,"message":"144","line":83,"column":32,"nodeType":"134","messageId":"135","endLine":83,"endColumn":34},{"ruleId":"132","severity":1,"message":"142","line":86,"column":11,"nodeType":"145","messageId":"146","endLine":86,"endColumn":18},{"ruleId":"117","severity":1,"message":"147","line":28,"column":6,"nodeType":"119","endLine":28,"endColumn":21,"suggestions":"148"},{"ruleId":"121","severity":1,"message":"149","line":2,"column":31,"nodeType":"123","messageId":"124","endLine":2,"endColumn":39},{"ruleId":"121","severity":1,"message":"150","line":4,"column":34,"nodeType":"123","messageId":"124","endLine":4,"endColumn":38},{"ruleId":"121","severity":1,"message":"151","line":12,"column":9,"nodeType":"123","messageId":"124","endLine":12,"endColumn":19},{"ruleId":"121","severity":1,"message":"152","line":19,"column":7,"nodeType":"123","messageId":"124","endLine":19,"endColumn":8},{"ruleId":"117","severity":1,"message":"153","line":55,"column":6,"nodeType":"119","endLine":55,"endColumn":8,"suggestions":"154"},{"ruleId":"121","severity":1,"message":"155","line":56,"column":9,"nodeType":"123","messageId":"124","endLine":56,"endColumn":10},{"ruleId":"117","severity":1,"message":"140","line":16,"column":6,"nodeType":"119","endLine":16,"endColumn":8,"suggestions":"156"},{"ruleId":"121","severity":1,"message":"157","line":25,"column":7,"nodeType":"123","messageId":"124","endLine":25,"endColumn":14},{"ruleId":"117","severity":1,"message":"140","line":15,"column":6,"nodeType":"119","endLine":15,"endColumn":8,"suggestions":"158"},{"ruleId":"117","severity":1,"message":"159","line":13,"column":6,"nodeType":"119","endLine":13,"endColumn":8,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.id' and 'params.viewerId'. Either include them or remove the dependency array.","ArrayExpression",["163"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'i' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assignments to the 'i' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["164"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'params.viewerId'. Either include it or remove the dependency array.",["165"],"'Fragment' is defined but never used.","'Link' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'s' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.id2'. Either include it or remove the dependency array.",["166"],"'q' is assigned a value but never used.",["167"],"'viewing' is assigned a value but never used.",["168"],"React Hook useEffect has a missing dependency: 'props.quizId'. Either include it or remove the dependency array.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"172","fix":"178"},{"desc":"172","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [params.id, params.viewerId]",{"range":"182","text":"183"},"Update the dependencies array to be: [params.id]",{"range":"184","text":"185"},"Update the dependencies array to be: [params.userId, params.viewerId]",{"range":"186","text":"187"},"Update the dependencies array to be: [params.id2]",{"range":"188","text":"189"},{"range":"190","text":"185"},{"range":"191","text":"185"},"Update the dependencies array to be: [props.quizId]",{"range":"192","text":"193"},[860,862],"[params.id, params.viewerId]",[661,663],"[params.id]",[937,952],"[params.userId, params.viewerId]",[1550,1552],"[params.id2]",[505,507],[452,454],[388,390],"[props.quizId]"]