[{"E:\\The-Quizzler\\ClientSide\\src\\index.js":"1","E:\\The-Quizzler\\ClientSide\\src\\App.jsx":"2","E:\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx":"3","E:\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx":"4","E:\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx":"5","E:\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx":"6","E:\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx":"7","E:\\The-Quizzler\\ClientSide\\src\\components\\AttemptQuiz.jsx":"8","E:\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx":"9","E:\\The-Quizzler\\ClientSide\\src\\components\\SelectQuiz.jsx":"10","E:\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx":"11","E:\\The-Quizzler\\ClientSide\\src\\components\\QuestionBox.jsx":"12","E:\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx":"13","E:\\The-Quizzler\\ClientSide\\src\\components\\QuestionCard.jsx":"14"},{"size":249,"mtime":1637296205037,"results":"15","hashOfConfig":"16"},{"size":1718,"mtime":1637326639506,"results":"17","hashOfConfig":"16"},{"size":4741,"mtime":1637327996600,"results":"18","hashOfConfig":"16"},{"size":3511,"mtime":1637297738728,"results":"19","hashOfConfig":"16"},{"size":2250,"mtime":1637324565139,"results":"20","hashOfConfig":"16"},{"size":486,"mtime":1637296205030,"results":"21","hashOfConfig":"16"},{"size":1922,"mtime":1637300027658,"results":"22","hashOfConfig":"16"},{"size":2144,"mtime":1637296205023,"results":"23","hashOfConfig":"16"},{"size":3917,"mtime":1637297208113,"results":"24","hashOfConfig":"16"},{"size":963,"mtime":1637296205033,"results":"25","hashOfConfig":"16"},{"size":5703,"mtime":1637322576500,"results":"26","hashOfConfig":"16"},{"size":721,"mtime":1637296205028,"results":"27","hashOfConfig":"16"},{"size":620,"mtime":1637296205034,"results":"28","hashOfConfig":"16"},{"size":131,"mtime":1637296205029,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1pdocph",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\The-Quizzler\\ClientSide\\src\\index.js",[],["62","63"],"E:\\The-Quizzler\\ClientSide\\src\\App.jsx",[],"E:\\The-Quizzler\\ClientSide\\src\\components\\CreateQuizPage.jsx",["64","65","66","67"],"E:\\The-Quizzler\\ClientSide\\src\\components\\LoginPage.jsx",[],"E:\\The-Quizzler\\ClientSide\\src\\components\\HomePage.jsx",["68","69","70","71"],"E:\\The-Quizzler\\ClientSide\\src\\components\\QuizCreated.jsx",["72"],"import { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst QuizCreated = () => {\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getQuiz/\" + params.id).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      This page shows the quiz user just created!(Look at the browser console)\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCreated;\r\n","E:\\The-Quizzler\\ClientSide\\src\\components\\Profile.jsx",["73"],"import React from \"react\";\r\nimport userIcons from \"../Images/gamer.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nvar year = new Date();\r\nyear = year.getFullYear();\r\n\r\nfunction Profile() {\r\n  const params = useParams();\r\n  const [userData, setUserData] = useState({});\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setUserData(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profilePage\">\r\n      <header>\r\n        <h1>Quizzler</h1>\r\n\r\n        <ul className=\"navbarItems\">\r\n          <li>Create a Quiz</li>\r\n          <li>About us</li>\r\n          <li>Start Quiz</li>\r\n          <li>{userData.name}</li>\r\n        </ul>\r\n      </header>\r\n      <div className=\"IntroSection\">\r\n        <img className=\"UserImage\" src={userIcons} alt=\"user icon\" />\r\n        <div>\r\n          <h1 className=\"Greetings\">Hello {userData.name}</h1>\r\n          <div className=\"UserDetails\">\r\n            <p>\r\n              Quiz Attempted: <span className=\"NumOfQuizAttempted\">0</span>\r\n            </p>\r\n            <p>\r\n              Quiz Created: <span className=\"NumOfQuizCreated\">0</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"ResultsContainer\">\r\n        <div className=\"HostResult\">\r\n          <h1>Results of your Quizzes</h1>\r\n          <p>To check the results of the quizzes you created </p>\r\n          <button type=\"button\">Click Here</button>\r\n        </div>\r\n        <div className=\"QuizAttemptedResult\">\r\n          <h1>Your Past Results</h1>\r\n          <p>To check the results of the quizzes you attempted </p>\r\n          <button type=\"button\">Click Here</button>\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        <p> CopyrightÂ© {year} </p>{\" \"}\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\The-Quizzler\\ClientSide\\src\\components\\AttemptQuiz.jsx",["74","75","76","77","78","79","80"],"import React from \"react\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport QuestionBox from \"./QuestionBox\";\r\n\r\nfunction AttemptQuiz(props) {\r\n  const isLoggedIn = props.loggedIn;\r\n  const [score,setScore] = useState(0);\r\n  const [response,setResponse] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n  const [allQues,setQues] = useState([]);\r\n  const [a,setA] = useState([]);\r\n  const params = useParams();\r\n  var s = 0;\r\n  const computedAnswer = (answer,correct) =>{\r\n      console.log(answer,correct);\r\n    if(answer === correct)\r\n    {\r\n        s++;\r\n        setScore(score + 1);\r\n    }\r\n    setResponse(response + 1)\r\n  }\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/getUser/\" + params.id).then((response) => {\r\n      setName(response.data.name);\r\n      //WE ARE GETTING ALL OF OUR USER DATA IN response.data\r\n    });\r\n\r\n    Axios.get(\"http://localhost:3001/getAllQuizzes\").then((response) => {\r\n        for(let i = 0; i < response.data.length; i++){\r\n            if(response.data[i]._id === params.id2){\r\n                setQues(response.data[i]);\r\n                setA(response.data[i].allQuestions)\r\n                break;\r\n            }\r\n        }\r\n        //setQues(response.data);\r\n  \r\n        //WE ARE GETTING ALL OF OUR QUIZZES IN response\r\n      });\r\n  }, []);\r\n  const q = Object.values(allQues)\r\n  if (true) {\r\n    return (\r\n      <div>\r\n        <h1>{allQues.title}</h1>\r\n        <h4><div>{\r\n            response < a.length &&\r\n        a.map((q)=><div>\r\n            <QuestionBox \r\n                question={q.Question} \r\n                option1={q.option1} \r\n                option2={q.option2} \r\n                option3={q.option3} \r\n                option4={q.option4}\r\n                selected={answer => computedAnswer(answer,q.Answer)}/>\r\n            </div>)}\r\n            {response === a.length ? (<h2>{ console.log(score)}{score}</h2>) : null }\r\n            </div>\r\n            </h4>\r\n      </div>\r\n    );\r\n  }\r\n  // navigate(\"/login\");   NAVIGATE IS NOT WORKING!??\r\n}\r\n\r\nexport default AttemptQuiz;\r\n","E:\\The-Quizzler\\ClientSide\\src\\components\\RegisterPage.jsx",[],"E:\\The-Quizzler\\ClientSide\\src\\components\\SelectQuiz.jsx",[],"E:\\The-Quizzler\\ClientSide\\src\\components\\AddQuestion.jsx",[],"E:\\The-Quizzler\\ClientSide\\src\\components\\QuestionBox.jsx",[],"E:\\The-Quizzler\\ClientSide\\src\\hooks\\usebasic-input.jsx",[],"E:\\The-Quizzler\\ClientSide\\src\\components\\QuestionCard.jsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":20,"nodeType":"87","messageId":"88","endLine":2,"endColumn":29},{"ruleId":"85","severity":1,"message":"89","line":2,"column":31,"nodeType":"87","messageId":"88","endLine":2,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":63,"column":32,"nodeType":"92","messageId":"93","endLine":63,"endColumn":34},{"ruleId":"94","severity":1,"message":"95","line":64,"column":49,"nodeType":"96","messageId":"97","endLine":64,"endColumn":74},{"ruleId":"85","severity":1,"message":"98","line":2,"column":31,"nodeType":"87","messageId":"88","endLine":2,"endColumn":39},{"ruleId":"85","severity":1,"message":"99","line":4,"column":21,"nodeType":"87","messageId":"88","endLine":4,"endColumn":25},{"ruleId":"85","severity":1,"message":"100","line":14,"column":10,"nodeType":"87","messageId":"88","endLine":14,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":33,"column":6,"nodeType":"103","endLine":33,"endColumn":8,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"102","line":12,"column":6,"nodeType":"103","endLine":12,"endColumn":8,"suggestions":"105"},{"ruleId":"101","severity":1,"message":"102","line":17,"column":6,"nodeType":"103","endLine":17,"endColumn":8,"suggestions":"106"},{"ruleId":"85","severity":1,"message":"98","line":2,"column":31,"nodeType":"87","messageId":"88","endLine":2,"endColumn":39},{"ruleId":"85","severity":1,"message":"99","line":4,"column":21,"nodeType":"87","messageId":"88","endLine":4,"endColumn":25},{"ruleId":"85","severity":1,"message":"107","line":8,"column":9,"nodeType":"87","messageId":"88","endLine":8,"endColumn":19},{"ruleId":"85","severity":1,"message":"108","line":11,"column":10,"nodeType":"87","messageId":"88","endLine":11,"endColumn":14},{"ruleId":"85","severity":1,"message":"109","line":15,"column":7,"nodeType":"87","messageId":"88","endLine":15,"endColumn":8},{"ruleId":"101","severity":1,"message":"110","line":43,"column":6,"nodeType":"103","endLine":43,"endColumn":8,"suggestions":"111"},{"ruleId":"85","severity":1,"message":"112","line":44,"column":9,"nodeType":"87","messageId":"88","endLine":44,"endColumn":10},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'Fragment' is defined but never used.","'Link' is defined but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["115"],["116"],["117"],"'isLoggedIn' is assigned a value but never used.","'name' is assigned a value but never used.","'s' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'params.id2'. Either include them or remove the dependency array.",["118"],"'q' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"119","fix":"121"},{"desc":"119","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [params.id]",{"range":"125","text":"126"},{"range":"127","text":"126"},{"range":"128","text":"126"},"Update the dependencies array to be: [params.id, params.id2]",{"range":"129","text":"130"},[1013,1015],"[params.id]",[322,324],[505,507],[1390,1392],"[params.id, params.id2]"]